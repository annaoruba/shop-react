{"version":3,"sources":["context.js","components/Navbar.js","components/Product.js","components/ProductList.js","components/Cart.js","components/Details.js","components/Default.js","components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["ProductContext","React","createContext","ProductProvider","state","products","detailsProduct","cart","searchProducts","modalOpen","lastAdd","totalPrice","indexSearch","setProducts","productsTab","data","forEach","element","console","log","product","Object","objectSpread","concat","toConsumableArray","_this","setState","getDetails","id","find","item","handleDetails","addToCart","productTemp","index","indexOf","inCart","counter","price","setTimeout","handleSearch","e","target","value","titles","map","prod","title","toLowerCase","indices","idx","push","listSearch","counterPlus","counterMinus","sumTotal","total","totalPriceTab","prodInCart","length","sumProdInCart","totalProd","totalProdTab","this","react_default","a","createElement","Provider","props","children","Component","ProductConsumer","Consumer","Navbar","className","class","react_router_dom","to","placeholder","onChange","Product","src","photoUrl","alt","onClick","build_default","rating","starDimension","starSpacing","starRatedColor","description","slice","disabled","ProductList","components_Product","key","Cart","Fragment","scope","data-label","Details","Default","Modal","App","components_Navbar","react_router","path","exact","component","components_Modal","Boolean","window","location","hostname","match","ReactDOM","render","context_ProductProvider","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b83f78b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport data from './data/data.json';\r\n\r\nconst ProductContext = React.createContext();\r\n//two components:\r\n//Provider\r\n//Consumer\r\n\r\nclass ProductProvider extends Component {\r\n    state = {\r\n        // products: [...data.products],\r\n        products: [],\r\n        //detailsProduct dodac\r\n        detailsProduct: {},\r\n        cart: [],\r\n        searchProducts: [],\r\n        modalOpen: false,\r\n        lastAdd: '',\r\n        totalPrice: 0,\r\n        indexSearch: [0,1,2,3,4,5,6,7,8,9],\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setProducts();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //to do - usunąć z koszyka tam gdzie counter = 0\r\n        this.sumTotal();\r\n        console.log('componentDidUpdate');\r\n    }\r\n\r\n    setProducts = () => {\r\n        let productsTab = [];\r\n        data.products.forEach(element => {\r\n            console.log(element)\r\n            const product = { ...element };\r\n            productsTab = [...productsTab, product]\r\n            console.log(productsTab)\r\n            this.setState(\r\n                () => {\r\n                    console.log(\"setState:\" + productsTab)\r\n                    return { products: productsTab }\r\n                }\r\n            )\r\n        });\r\n        console.log(this.state.products)\r\n    }\r\n\r\n    getDetails = (id) => {\r\n        const product = this.state.products.find(item => item.id === id);\r\n        //console.log(product);\r\n        return product;\r\n    }\r\n\r\n    handleDetails = (id) => {\r\n        const product = this.getDetails(id);\r\n        this.setState(\r\n            () => {\r\n                console.log(\"setStatedetails:\" + product)\r\n                return { detailsProduct: product }\r\n            }\r\n        )\r\n    }\r\n\r\n    addToCart = (id) => {\r\n        console.log(\"add to cart\")\r\n        let productTemp = [...this.state.products];\r\n        const index = productTemp.indexOf(this.getDetails(id));\r\n        let product = productTemp[index];\r\n        product.inCart = true;\r\n        product.counter = product.counter + 1;\r\n        let price = product.price * product.counter;\r\n        let total = price;\r\n        debugger;\r\n        this.setState(\r\n            () => {\r\n                return {\r\n                    products: productTemp,\r\n                    cart: [...this.state.cart, product],\r\n                    modalOpen: true,\r\n                    lastAdd: product\r\n                }\r\n            }\r\n        )\r\n        setTimeout(() => {\r\n            this.setState({\r\n                modalOpen: false\r\n            })\r\n        }, 2000);\r\n    }\r\n\r\n    handleSearch = (e) => {\r\n        console.log(e.target.value)\r\n        let productTemp = [...this.state.products];\r\n        //console.log(\"prod for search: \" + productTemp.id)\r\n        let titles = productTemp.map(prod => prod.title.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1)\r\n        console.log(titles);\r\n        let check = (title) => {\r\n            return title === true;\r\n          }\r\n        // let indexSearch = titles.findIndex(check);\r\n        // console.log(indexSearch)\r\n        let indices = [];\r\n        let idx = titles.indexOf(true)\r\n        console.log(idx)\r\n        while (idx != -1) {\r\n        indices.push(idx);\r\n        idx = titles.indexOf(true, idx + 1);\r\n        }\r\n        //indeksy do zwrocenia\r\n        console.log(\"indeksy: \" + indices)\r\n        const listSearch = indices.map(id => this.getDetails(id+1))\r\n        console.log(listSearch)\r\n        // return (indices + 1)\r\n        this.setState(\r\n            () => {\r\n                return {\r\n                    indexSearch: indices,\r\n                }\r\n            }\r\n        )\r\n        // TO DO !!!!\r\n        // let product = titles.map(title => true ? title.id : '')\r\n    }\r\n\r\n    counterPlus = (id) => {\r\n        console.log(\"counter plus\")\r\n        let productTemp = [...this.state.products];\r\n        const index = productTemp.indexOf(this.getDetails(id));\r\n        let product = productTemp[index];\r\n        product.inCart = true;\r\n        product.counter = product.counter + 1;\r\n        let price = product.price * product.counter;\r\n        let total = price;\r\n        console.log(productTemp)\r\n        this.setState(\r\n            () => {\r\n                return {\r\n                    products: productTemp,\r\n                    cart: [...this.state.cart],\r\n                }\r\n            }\r\n        )\r\n        //debugger;\r\n    }\r\n\r\n    counterMinus = (id) => {\r\n        console.log(\"counter minus\")\r\n        let productTemp = [...this.state.products];\r\n        const index = productTemp.indexOf(this.getDetails(id));\r\n        let product = productTemp[index];\r\n        if (product.counter == 1) {\r\n            product.inCart = false\r\n        }\r\n            product.counter = product.counter - 1;\r\n            let price = product.price * product.counter;\r\n            let total = price;\r\n            this.setState(\r\n                () => {\r\n                    return {\r\n                        products: productTemp,\r\n                        cart: [...this.state.cart],\r\n                    }\r\n                }\r\n            )\r\n        // product.counter = 0 ? product.inCart = false : product.inCart = true;\r\n        debugger;\r\n    }\r\n\r\n    sumTotal = () => {\r\n        let total = 0;\r\n        let totalPriceTab = this.state.cart.map(prodInCart => total += prodInCart.counter * prodInCart.price)\r\n        // let totalPrice = this.state.cart.reduce(function (sum, tax) {\r\n        //     return sum + tax.total;\r\n        // }, 0);\r\n        let totalPrice = totalPriceTab[totalPriceTab.length - 1]\r\n        console.log(totalPriceTab[totalPriceTab.length - 1])\r\n        debugger;\r\n        return totalPrice;\r\n    }\r\n\r\n    sumProdInCart = () => {\r\n        console.log(\"pppppppppppppp\");\r\n        let totalProd = 0;\r\n        let totalProdTab = this.state.cart.map(prodInCart => totalProd += prodInCart.counter)\r\n        // let totalPrice = this.state.cart.reduce(function (sum, tax) {\r\n        //     return sum + tax.total;\r\n        // }, 0);\r\n        let totalProds = totalProdTab[totalProdTab.length - 1]\r\n        console.log(totalProdTab[totalProdTab.length - 1])\r\n        debugger;\r\n        return totalProd;\r\n    }\r\n\r\n    // inCartStatus = () => {\r\n    //     console.log(\"in cart state 1: \" + this.state.products[0].inCart)\r\n    //     console.log(\"in cart state 1 w jsonie: \" + data.products[0].inCart)\r\n    //     const newProduct = [...this.state.products]\r\n    //     newProduct[0].inCart = true\r\n    //     this.setState = (()=> {\r\n    //         return {products: newProduct}\r\n    //     })\r\n    //     console.log(\"in cart state 1: \" + this.state.products[0].inCart)\r\n    //     console.log(\"in cart state 1 w jsonie: \" + data.products[0].inCart)\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ProductContext.Provider value={{ ...this.state, handleDetails: this.handleDetails, addToCart: this.addToCart, handleSearch: this.handleSearch, counterPlus: this.counterPlus, counterMinus: this.counterMinus, sumTotal: this.sumTotal, sumProdInCart: this.sumProdInCart }}>\r\n                {/* <button onClick={this.inCartStatus}>test</button> */}\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport { ProductProvider, ProductConsumer };\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProductConsumer } from '../context'\r\n\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar sticky-top\">\r\n                <div class=\"container\">\r\n                    <Link to=\"/\">logo</Link>\r\n                    <ProductConsumer>\r\n                        {value => (<div class=\"inputContainer\"><input className=\"inputSearch\" placeholder=\"Szukaj...\" onChange={(e) => { value.handleSearch(e) }} /> <i class=\"material-icons\">search</i> </div>)\r\n                        }\r\n                    </ProductConsumer>\r\n                    <Link to=\"/cart\" class=\"navbar__Cart\">\r\n                        <i class=\"material-icons\">shopping_cart</i>\r\n                        <ProductConsumer>{value => (<div class=\"navbar__Counter\">({value.sumProdInCart()})</div>)}</ProductConsumer>\r\n                    </Link>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport { ProductConsumer } from '../context'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport StarRatings from 'react-star-ratings';\r\n\r\nclass Product extends Component {\r\n    render() {\r\n        return (\r\n            <ProductConsumer>\r\n                {\r\n                    value => (\r\n                        //style={this.state.indexSearch.indexOf(this.props.product.id) == -1 ? \"display:none\" : \"display:block\"}\r\n                        <div className={value.indexSearch.indexOf(this.props.product.id - 1) == -1 ? \"none ProductList__Element\" : \"block ProductList__Element\"}>\r\n                        <div className=\"ProductCard\">\r\n                        <div className=\"ProductCard__Photo\"><img class=\"ProductCard__Img\" src={this.props.product.photoUrl} alt={this.props.product.title} /></div>\r\n                            <div className=\"ProductCard__Content\">\r\n                            <Link to={`/details/${this.props.product.id}`}>\r\n                                <h5 className=\"card-title\" onClick={() => {value.handleDetails(this.props.product.id)}}>{this.props.product.title}</h5>\r\n                            </Link>\r\n                            <div>{this.props.product.price} zł.</div>\r\n                            <StarRatings\r\n                                rating={this.props.product.rating}\r\n                                starDimension=\"20px\"\r\n                                starSpacing=\"5px\"\r\n                                starRatedColor=\"#DAA520\"\r\n                            />\r\n                            <div>{this.props.product.description.slice(0, 150)}...</div>\r\n                            <div class=\"d-flex align-items-center\">\r\n                            {\r\n                                    this.props.product.inCart ? (<button class=\"ProductCard__Counter d-flex align-items-center\" onClick={() => { value.counterPlus(this.props.product.id) }}><i class=\"material-icons\">add</i></button>) : \"\"\r\n                            }\r\n                            <button class=\"ProductCard__Button\" disabled={this.props.product.inCart} onClick={() => {value.addToCart(this.props.product.id)}}>\r\n                                {\r\n                                    this.props.product.inCart ? (<span>w koszyku ({this.props.product.counter})</span>) : (<span>Dodaj do koszyka<i class=\"material-icons\">shopping_cart</i></span>)\r\n                                }\r\n                            </button>\r\n                            {\r\n                                    this.props.product.inCart ? (<button class=\"ProductCard__Counter d-flex align-items-center\" onClick={() => { value.counterMinus(this.props.product.id) }}><i class=\"material-icons\">remove</i></button>) : \"\"\r\n                            }\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </ProductConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nProduct.propTypes = {\r\n    product: PropTypes.shape({\r\n        id: PropTypes.number\r\n        //to do\r\n    }).isRequired\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport Product from './Product.js'\r\nimport { ProductConsumer } from '../context'\r\n\r\n\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    render() {\r\n        //console.log(this.state.products);\r\n        return (\r\n            <div>\r\n                    <div className=\"ProductList\">\r\n                        {/* <Product /> */}\r\n                        <ProductConsumer>\r\n                            {a => {\r\n                                return a.products.map(product => {\r\n                                    return <Product key={product.id} product={product} />;\r\n                                });\r\n                            }}\r\n                        </ProductConsumer>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductList","import React, { Component } from 'react';\r\nimport { ProductConsumer } from '../context'\r\n\r\n\r\nlet total = 0;\r\n\r\nclass Cart extends Component {\r\n    render() {\r\n        return (\r\n            <ProductConsumer>\r\n                {value => (<><table className=\"table cartTable\">   <thead>\r\n    <tr>\r\n      <th scope=\"col\">Zdjęcie</th>\r\n      <th scope=\"col\">Nazwa</th>\r\n      <th scope=\"col\">Ilość</th>\r\n      <th scope=\"col\">Cena</th>\r\n      <th scope=\"col\">Razem</th>\r\n      <th scope=\"col\">Dodaj</th>\r\n      <th scope=\"col\">Odejmij</th>\r\n    </tr>\r\n  </thead><tbody>{value.cart.map(prodInCart =>\r\n                    prodInCart.counter > 0 ?\r\n                        (\r\n                            <tr>\r\n                                <td data-label=\"Zdjęcie\"><img class=\"cartImg\" src={prodInCart.photoUrl} /></td>\r\n                                <td data-label=\"Nazwa\">{prodInCart.title}</td>\r\n                                <td data-label=\"Ilość\">{prodInCart.counter}</td>\r\n                                <td data-label=\"Cena\">{prodInCart.price}</td>\r\n                                <td data-label=\"Razem\">{prodInCart.counter * prodInCart.price}</td>\r\n                                <td data-label=\"Dodaj\"><button className=\"ProductCard__Counter\" onClick={() => { value.counterPlus(prodInCart.id) }}><i class=\"material-icons\">add</i></button></td>\r\n                                <td data-label=\"Odejmij\"><button className=\"ProductCard__Counter\" onClick={() => { value.counterMinus(prodInCart.id) }}><i class=\"material-icons\">remove</i></button></td>\r\n                            </tr>\r\n                        ) : \"\"\r\n                )}</tbody></table> <div class=\"cartSum\">Suma: <b>{value.sumTotal()}zł.</b></div></>)\r\n                }\r\n            </ProductConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cart;","import React, { Component } from 'react';\r\nimport { ProductConsumer } from '../context';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Details extends Component {\r\n    render() {\r\n        return (\r\n            <ProductConsumer>\r\n\r\n                {value => (\r\n                    <div>\r\n                        <div className=\"ProductDetails\">\r\n                            <div className=\"ProductDetails__PhotoCol\">\r\n                                <div className=\"ProductDetails__Photo\">\r\n                                    <img className=\"ProductDetails__Img\" src={value.detailsProduct.photoUrl} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ProductDetails__DetailsCol\">\r\n                                <h5>{value.detailsProduct.title}</h5>\r\n                                <div>{value.detailsProduct.price} zł.</div>\r\n                                <div className=\"ProductDetails__Description\" >{value.detailsProduct.description}</div>\r\n                                <button class=\"ProductCard__Button\" ><span>Dodaj do koszyka<i class=\"material-icons\">shopping_cart</i></span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"d-flex\"><i class=\"material-icons\">keyboard_backspace</i> Powrót</div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n                }\r\n                {/* to do back to product, add to cart 3:00 */}\r\n            </ProductConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Details;","import React, { Component } from 'react';\r\n\r\n\r\nclass Default extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               default \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Default","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {ProductConsumer} from '../context'\r\n\r\nclass Modal extends Component {\r\n    render() {\r\n        return (\r\n            <ProductConsumer>\r\n            {\r\n                value => value.modalOpen ? (\r\n                <div className=\"modalOpen\">{value.lastAdd.title} zostal dodany do koszyka</div>\r\n                ) : (<div className=\"modalOpen modalClose\">{value.lastAdd.title} zostal dodany do koszyka</div>)\r\n            }\r\n\r\n        </ProductConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.scss';\nimport Navbar from './components/Navbar'\nimport ProductList from './components/ProductList'\nimport Cart from './components/Cart'\nimport Details from './components/Details'\nimport Default from './components/Default'\nimport Modal from './components/Modal'\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Navbar />\n        <main className=\"Container\">\n        <Switch>\n          <Route path=\"/\" exact component={ProductList}>\n          </Route>\n          <Route path=\"/details\" component={Details}>\n          </Route>\n          <Route path=\"/cart\" component={Cart}>\n          </Route>\n          <Route component={Default}>\n          </Route>\n        </Switch>\n        <Modal/>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {ProductProvider} from './context.js';\n\nReactDOM.render(\n    <ProductProvider><BrowserRouter><App /></BrowserRouter></ProductProvider>\n    ,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}